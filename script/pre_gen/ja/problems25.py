#0 から n-1 までのインデックスで示された n 個の風船が与えられる。各風船には配列 nums で表された数字が書かれている。あなたはすべての風船を割るよう求められている。
#i 番目の風船を破裂させると、nums[i - 1] * nums[i] * nums[i + 1]のコインがもらえる。i - 1 または i + 1 が配列の範囲外に出た場合は、1 が描かれた風船があるものとして扱う。
#全ての風船を賢く割って集められるコインの最大値を出力せよ。
#
#例 1：
#入力： nums = [3,1,5,8]
#出力： 167
#説明：
#nums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> []
#coins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167
#
#
#例 2：
#入力： nums = [1,5]
#出力： 10
#
#制約：
#n == nums.length
#1 <= n <= 300
#0 <= nums[i] <= 100
class Solution:
    def maxCoins(self, nums: list[int]) -> int: