長さ n の整数配列 nums が与えられる。
arr_kは、numsを時計回りにk回転させた配列であるとする。nums の回転関数 F を以下のように定義する：
F(k) = 0 * arr_k[0] + 1 * arr_k[1] + ...+ (n - 1) * arr_k[n - 1]。
F(0), F(1), ..., F(n-1) の最大値を出力せよ。
テストケースは、答えが32ビット整数に収まるように生成される。

例 1：
入力： nums = [4,3,2,6]
出力： 26
説明：
F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25
F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16
F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23
F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26
つまり、F(0)、F(1)、F(2)、F(3)の最大値はF(3)=26となる。

例2：
入力： nums = [100]
出力： 0

制約：
n == nums.length
1 <= n <= 10^5
-100 <= nums[i] <= 100